
# kubetpl:syntax:go-template

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: {{ .NAME }}
    app: {{ .NAME }}
  name: {{ .NAME }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      io.kompose.service: api
      app: {{ .NAME }}
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/production-services: "true"
        io.kompose.network/traefik: "true"
        io.kompose.service: api
        app: {{ .NAME }}
    spec:
      containers:
      - image: harbor.floret.dev/tinyfam/tinyfam@sha256:f1d944d0522fd881430dd99b23319b36d9dbab2cb4757a97ffe30d9cbe6f1642
        imagePullPolicy: ""
        name: api
        resources: {}
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-conf
          readOnly: true
      imagePullSecrets:
      - name: harborcred
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: nginx-conf
        configMap:
          name: {{ .NAME }}-configmap # place ConfigMap `nginx-conf` on /etc/nginx
          items:
            - key: default.conf
              path: default.conf
status: {}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .NAME }}-svc
spec:
  selector:
    app: {{ .NAME }}
  ports:
  - name: web
    port: 80
    targetPort: 80
  - name: websecure
    port: 443
    targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: test
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: tinyfam.staging.kube.floret.dev
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .NAME }}-svc
          servicePort: web
